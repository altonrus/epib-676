---
title: "Other simulation methods"
subtitle: "EPIB  676 session 9, McGill University"
author: "Alton Russell"
date: "26 Sep 2024"
format: revealjs
editor: visual
---

## Today

-   **Discrete event simulation**

-   Agent based model

-   System dynamics

-   Choosing a model structure

## Credit

Much of this section is based on:

[*Discrete Event Simulation for Health Technology Assessment (2016) by Caro et. al.*](https://www.routledge.com/Discrete-Event-Simulation-for-Health-Technology-Assessment/Caro-Moller-Karnon-Stahl-Ishak/p/book/9780367737689)

## Discrete event simulation strengths

-   Model heterogeneous population\*

-   Time-varying parameters\*

\*same as microsim

-   Represent disease as continuous process

-   Model [**capacity-constrained**]{.underline} resources

-   Entity types interact (patient, provider, tumor, etc.)^+^

^+^In a limited way

## Key components

-   **Events:** instantaneous change to entity or system

-   **Entities:** person or thing that experiences events

    -   patients, providers, ambulance, etc.

-   **Attributes:** information specific to entity

    -   Age, health state, 'in service'

-   **Resources:** provide service and have fixed capacity

    -   Providers, exam room, operating room, ventillator, etc.

-   **Queues:** lists of entities waiting for resource

## DES in health vs. elsewhere

-   DES common for manufacturing, logistics, traffic engineering

-   Focus usually on **system-level outcomes**

    -   Production volume, wastage, resource utilization, processing time

-   Health applications focus more on **entities'** state and pathway (patients)

    -   Often track more entity-level attributes

## Examples of events

![](figs/des_event_examples.png)

## Event graph

![](figs/DES-event-graph.png)

Arrows show sequence of events.

## Discrete events but continuous time

-   Events are instantaneous

-   Time between events usually sampled from distribution

-   State of system updated each time an event occurs

-   Unlike discrete time models with a constant cycle length, the "step size" varies depending on the time between events

    -   "Next-event-time-advance"

## Attributes

-   Some assigned at baseline and not changed (e.g., sex), others updated by events (e.g., cumulative costs, blood pressure)

-   Probability & timing of events can depend on attributes

![](figs/entity-attribute-example.png)

## Examples of attributes

![](figs/attribute-examples.png)

## Example of next-event-time-advance

![](figs/des_advance_1.png)

## Example of next-event-time-advance

![](figs/des_advance_2.png)

## Example of next-event-time-advance

![](figs/des_advance_3.png)

## Example of next-event-time-advance

![](figs/des_advance_4.png)

## Example of next-event-time-advance

![](figs/des_advance_5.png)

## Example of next-event-time-advance

![](figs/des_advance_6.png)

## Example: time to competing events

```{r}
#| echo: true

# Events can have different distributions
time_to_checkup = rep(1, 15) # Always 1 year apart
time_to_polyp = rexp(n=15, rate = 1.5) # Sampled from distribution
# The clock goes until the next one occurs
time = pmin(time_to_checkup, time_to_polyp)
event=ifelse(time_to_checkup<time_to_polyp, "checkup","polyp developed")
cat(paste0("i: ", 1:15, "   event: ", event, "   time: ", time, "\n"))
```

## Global variables

-   Track the state of the [**system**]{.underline}

-   Memory-efficient (vs. individual attributes)

-   Some applications track only global variables

![](figs/attribute-vs-global-variable.png)

## Global variable examples

![](figs/global_variable_examples.png)

## Time

-   Pre-specify total simulation time, run until reach

-   Entities enter (are created) and exit at various times

-   Capacity constrained resources are "seized" and "released" by entities

    -   Entities must queue if all resources are seized
    -   This is the interaction between entities!

## Resource capacity and availability

![](figs/capacity_illustration.png)

## Resources for DES

-   [Simmer R package](https://r-simmer.org/) \[[2021 workshop Koen Degeling](https://r-hta.org/events/workshop/2021/degeling.pdf)\], \[[2019 presentation Biller et. al](http://www.trutschnig.net/Slides_simmer_Biller_Koehnke_Mayr.pdf).\]

-   [Microsimulation package](https://cran.r-project.org/web/packages/microsimulation/index.html) \[[2021 workshop Mark Clements](https://r-hta.org/events/workshop/2021/clements.pdf)\]

-   [r-hta.org tutorial using descem, Alvarez and Ribero](https://r-hta.org/tutorial/descem/)

Dedicated software: Arena, Simul8

## Today

-   Discrete event simulation

-   **Agent based model**

-   System dynamics

-   Choosing a model structure

## Credit

Much of this section based on

[*Chhatwal & He (2015). Economic evaluations with agent-based modelling: An introduction.*](https://doi.org/10.1007/s40273-015-0254-2)

## Why agent based models?

-   Model autonomous agents interacting with each other and their environment

Combines benefits of:

-   Differential equations model

    -   model 'infectiousness' of disease or behavior

-   Microsimulation/discrete event simulation

    -   flexible, individual-level, easier to instantiate heterogeneity

## Schematic

[![Chhatwal et. a. 2015](figs/agent_based_transmission.png)](www.doi.org/10.1007/s40273-015-0254-2)

## Agents and environments

-   **Agents**: usually people, could be animals, vehicles, companies, molecules, cells etc.

-   **Environment**: country, city, hospital, school, prison, twitter, airplane, body, organ, etc.

## Agents

-   Respond to environment and other agents as programmed

    -   Behavior can vary by characteristics and history (memory)
    -   Not centrally controlled

-   Allows estimation of "network effects"

    -   Benefit of intervention depends on others' behavior

    -   e.g., vaccination, sexually transmitted disease test and treat, behavior/social conditioning

## "Bottom up" system modeling

-   Behavior programmed at the individual level

-   System dynamics observed, not imposed

-   Individual behavior $\rightarrow$ system dynamics:

    -   Sex practices $\rightarrow$ HIV epidemic size

    -   quarantine adherence $\rightarrow$ Ebola control

    -   Vaccination + mixing while sick $\rightarrow$ flu season peak

## Network topology

::::: columns
::: {.column width="50%"}
![](figs/networkA.png)
:::

::: {.column width="50%"}
![](figs/networkB.png)
:::
:::::

## Network structure matters

-   Homogeneous mixing usually unrealistic

    -   Some have many connections ("high degree") others have few

    -   Some networks are dense, others are sparse

-   Create networks by:

    -   Empirically estimating or calibrating from data

    -   Algorithmically create via sampling rules

-   Network often [**dynamic**]{.underline} (connections dissolve and re-form)

## Discrete or continuous?

-   Two options:

    -   Fixed cycle lengths (like cohort models)

    -   Continuous time discrete event approach (like discrete event model)

Fixed cycle lengths usually easier to program

## Downside: compute

-   Often most computationally intensive models

-   Microsimulation variance reduction techniques hard to apply

    -   e.g., common random numbers less useful when one interaction can change everyone's trajectory

-   Due to complexity, R may not be language of choice (Matlab, C++, Julia likely faster)

## Ex: PrEP for people who inject drugs[^1]

[^1]: Published in [Fu, Owens and Brandeau 2019](https://doi.org/10.1097%2FQAD.0000000000001747). Material adapted from MS&E 292 by Margaret Brandeau

**Objective:** Evaluate the cost-effectiveness of PrEP for PWID under different targeting strategies (Assume PrEP+Screen+ART and 25% coverage)

**Strategies:**

::::: columns
::: {.column width="50%"}
-   No Targeting

-   Enroll Partners
:::

::: {.column width="50%"}
-   Target Most Partners

-   Target Most Infected Partners
:::
:::::

## PrEP model

-   Network model

-   Sexual and needlesharing HIV transmission

-   4 HIV stages (acute infection, ..., AIDS)

-   Calibrated to data from a large PWID network in Chicago

-   Track costs, QALYs, HIV infections averted

-   Programmed in Matlab

-   Health system perspective

## Model Schematic

![](figs/PrEP_network_schematic.png)

## PrEP CEA results

::::: columns
::: {.column width="70%"}
![](figs/PrEP_CEA_results.png)
:::

::: {.column width="30%"}
"US style" efficiency frontier plots have costs on X axis, QALYs on Y axis.
:::
:::::

## Resources for ABM

-   [RNetLogo package](http://rnetlogo.r-forge.r-project.org/) \[[blog](https://www.r-bloggers.com/2014/07/agent-based-models-and-rnetlogo/)\]

-   [Agent-based modeling chapter](https://bookdown.org/f_lennert/book-toolbox_css/agent-based-modeling.html) from "Toolbox CSS" by Felix Lennert

-   [EpiModel R package](https://doi.org/10.18637/jss.v084.i08) (has compartmental and network models)

## Today

-   Discrete event simulation

-   Agent based model

-   **System dynamics**

-   Choosing a model structure

## Credit

Much of this section based on

-   [System Dynamics Modeling with R](https://link-springer-com.proxy3.library.mcgill.ca/book/10.1007/978-3-319-34043-2) (2016) by Jim Duggan

## System dynamics philosophy

Actions can have consequences through complex, non-linear feedback loops

![](figs/SD-domino-guy.png)

## Stocks and flows

-   Stocks = compartment/state; Flows = transitions

-   Analogy: faucet, bathtub, drain

![](figs/SD_disease_stock_flow.png)

## More stocks and flows

![](figs/SD-stock-flows-more.png)

## Feedback loops

> A closed chain of causal connections from a stock, through a set of decisions or rules or physical laws or actions that are dependent on the level of the stock, and back again through a flow to change the stock -Meadows (2008)

What separate SD models from traditional differential equations models

2 types:

-   **Balancing:** negtaive feedback, "goal-seeking"

-   **Reinforcing:** positive feedback, "run-away"

## Heating a room: balancing loop (negative feedback)

![](figs/SD_feedback_room_heat.png)

## Capital investment: reinforcing loop (positive feedback)

![](figs/SD_feedback_capital_growth.png)

## Ex: Opioid misuse and use disorder

![](figs/SD-opioid-schematic.svg)

## Feedback loops in opioid example

![](figs/SD-opioid-feedbacks.png)

[Stringfellow et. al. 2022](https://pubmed.ncbi.nlm.nih.gov/35749492/)

[Lim et. al. 2022](www.doi.org/10.1073/pnas.2115714119)

## Resources for SD modeling

-   [Tracy et. al. 2018. "ABM in Public Health" Annual Review of Public Health](https://doi.org/10.1146/annurev-publhealth-040617-014317)

-   [SD in R intro](https://rpubs.com/rsmard05/sysDynR), Cpt. Rick Mard

-   [System Dynamics Modeling with R](https://link-springer-com.proxy3.library.mcgill.ca/book/10.1007/978-3-319-34043-2) by Jim Duggan

-   [Vensim software](https://vensim.com/free-download/)

## Today

-   Discrete event simulation

-   Agent based model

-   System dynamics

-   **Choosing a model structure**

## Choosing model structure

-   Goal: capture relevant differences between strategies

-   "As complex as needed, as simple as possible."

![](figs/model_categorization.png)

## Recap

-   Discrete event simulation model [capacity constrained]{.underline} systems in continuous times

-   "Bottom up" agent based models assess how individual behavior impacts system outcomes

-   "Top down" system dynamic (cohort) models use feedback loops to assess system behavior

-   **Regardless of structure: start simple and add complexity!**

## Where we are

-   Have completed method lectures on model structures!

-   Six more methods lectures which focus on design, parameterization, calibration, and uncertainty analysis

-   Then, 'applied' phase where you examine many examples

## Logistics

-   Assignment 3 due Fri, Oct 4
