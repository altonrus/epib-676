---
title: "Cohort models 1"
subtitle: "EPIB  676 session 4, McGill University"
author: "Alton Russell"
date: "13 Jan 2023"
format: revealjs
editor: visual
---

## Today

-   **Discrete-time cohort state-transition models**

-   Markov model solution

-   Time-varying transitions

## Packages

```{r}
#| echo: true
library(heemod) #health economic markov models
library(expm) #for raising matrices to exponents with %^%
library(tidyr) #for spread function for wide-to-long table formating
library(ggplot2) #plotting

#use install.packages("Package") for any you don't have already

theme_set(theme_bw()) #set ggplot theme
```

## **Cohort state-transition model**

-   Dynamic mathematical model

-   A hypothetical cohort of individuals move between health states over time.

-   Classical example is the Markov model, where transition probabilities

    -   Are constant

    -   Depend only on your current state

## When to use?

-   Decision problem has a dynamic component

-   Disease process can vary over time

-   Can be described with a reasonable number of health states

## **States**

> Healthy, acute infection, chronic infection, cirrhosis, untreated disease, in treatment, on wait list, lost to follow-up, dead...

-   Mutually exclusive and exhaustive

-   Individuals in the same state treated as identical

    -   same costs, same health outcomes

    -   same probability of transitioning out (no matter how long they've been there)

## Transitions, cycles, time horizon

-   Only transition at end of a cycle

-   Cycle duration is design choice (second, day, month, quarter, year...)

-   Time horizon = cycle duration x number of cycles

## Transition matrix

::: columns
::: {.column width="50%"}
$$
P=\\
\begin{bmatrix}
p_{s_1 \rightarrow s_1} & p_{s_1 \rightarrow s_2} & p_{s_1 \rightarrow s_3}\\
p_{s_2 \rightarrow s_1} & p_{s_2 \rightarrow s_2} & p_{s_2 \rightarrow s_3}\\
p_{s_3 \rightarrow s_1} & p_{s_3 \rightarrow s_2} & p_{s_3 \rightarrow s_3}
\end{bmatrix}
$$
:::

::: {.column width="50%"}
-   $n_s \times n_s$ matrix of transition probabilities

    -   $n_s$ is number of states

-   Rows correspond to "**from**" state (sum to 1)

-   Columns correspond to "**to**" states
:::
:::

## Transition matrix example

::: columns
::: {.column width="40%"}
```{r}
#| echo: true
#| eval: false
mat_dim <- 
  define_transition(
    state_names = 
      c('A', 'B', 'C'),
   .3, .6, .1, 
   .2, .5, .3,
    0,  0,  1)

plot(mat_dim)
```

::: {.column width="50%"}
$$
\begin{array}{c}\begin{matrix}a & b & c \end{matrix} 
\\\left[\ 
\begin{matrix}
0.3 & 0.6 & 0.1\\
0.2 & 0.5 & 0.3\\
0 & 0 & 1
\end{matrix}\ \right]
\end{array}
$$
:::
:::

::: {.column width="60%"}
```{r}
#| fig-width: 6
#| fig-height: 6
mat_dim <- define_transition(
  state_names = 
  c('A', 'B', 'C'),
   .3, .6, .1, 
   .2, .5, .3,
    0,  0,  1)
plot(mat_dim)

```
:::
:::

## Absorbing states

::: columns
::: {.column width="50%"}
```{r}
#| echo: false
#| fig-width: 4
#| fig-height: 3
mat_dim <- 
  define_transition(
    state_names = 
      c('Alive', 'Dead'),
   .9, .1,
   0, 1)
plot(mat_dim)
```

$$
\begin{array}{c}\begin{matrix}alive & dead \end{matrix} 
\\\left[\ 
\begin{matrix}
0.9 & 0\\
0 & 1
\end{matrix}\ \right]
\end{array}
$$
:::

::: {.column width="50%"}
-   No escape

-   Death is common example

-   Transition matrix row has a 1 on diagonal entry, all other entries 0
:::
:::

## Tunnel states

::: columns
::: {.column width="50%"}
```{r}
#| echo: false
#| fig-width: 4
#| fig-height: 3
mat_dim <- 
  define_transition(
    state_names = 
      c('HIV-', 'Infected', 'HIV+'),
   .9, .1, 0,
   0, 0, 1,
   0, 0, 1)
plot(mat_dim)
```

$$
\begin{array}{c}\begin{matrix}HIV- & Infected & HIV+\end{matrix} 
\\\left[\ 
\begin{matrix}
0.9 & .1 & 0\\
0 & 0 & 1\\
0 & 0 & 1
\end{matrix}\ \right]
\end{array}
$$
:::

::: {.column width="50%"}
-   Temporary state, 1 cycle only

-   No self-loop (0 on diagonal)

-   A 'workaround' for the Markov property.

-   If costs, outcomes, or transitions differ for beginning or end of health condition, break into tunnel states
:::
:::

## Example: Transfusion-transmitted chronic conditions

::: columns
::: {.column width="50%"}
![](ghana_markov_schematics.png)
:::

::: {.column width="50%"}
TU=treatment uptake; SC=subclinical; AVT=antiviral therapy; TE=treatment effectiveness; TF=treatment failure; CC=compensated cirrhosis; DCC=decompensated cirrhosis.

[Russell et. al. 2021](www.doi.org/0.1111/trf.16704)
:::
:::

## Transition matrix for HIV model

![](hiv_transition_matrix.png)

TU=treatment uptake; OCM=other cause mortality; SC=subclinical; ART=antiviral therapy; TE=treatment effectiveness, NH=natural history. [Russell et. al. 2021](www.doi.org/0.1111/trf.16704)

## Initial state vector $m_0$

-   $1 \times n_s$ vector showing how cohort is distributed at time 0

-   Sum of the vector is the total cohort size

-   Everyone can be in one state

    $$
    m_0 =
    \begin{bmatrix}
    10,000 & 0 & 0 & 0\\
    \end{bmatrix}
    $$

-   Or spread across the states

$$
m_0 = 
\begin{bmatrix}
2,000 & 3,000 & 1,000 & 4,000\\
\end{bmatrix}
$$

## Rates and probabilities

-   **Rates** are instintaneous force of an event

-   **Probabilities** is the cumulative risk over a defined period

-   We need: transition probabilities specific to cycle length

-   We may have:

    -   probability for different cycle length (2-year instead of 6 month)

    -   rate (e.g., 200 events per person-year)

## Converting rates to probabilities

Generating an annual probablity $p(t)$ from an event rate $r$ with units events/year:

$$
p(t) = 1 - e^{-rt} \quad r = -\frac{1}{t}log(1-p)
$$

Example:

-   In a population of 800, 87 became ill over a 2 year period

-   $r = 87/(2 \times 800) = 0.0544$ illnesses/year

-   $p_{0.5 year} = 1 - e^{-0.0544(0.5)} = 0.0268$

## Prob → rate → prob

-   If probability is for a duration that doesn't match your cycle length, you **can not** simply multiply/divide the probability

-   Instead convert to a rate then convert back to a probability

Example: The one-year probability of developing cancer is 0.2. If you are building a model with a 1-month cycle length, what probabilty should you use?

$$
p(t) = 1 - e^{-rt} \quad r = -\frac{1}{t}log(1-p)
$$

## Prob → rate → prob

Wrong way

```{r}
#| echo: true
p_1yr = 0.2
p_1month = p_1yr/12; p_1month
```

Right way

```{r}
#| echo: true

rate = -1*log(1-0.2)
rate #events/year
p_1month = 1 - exp(-1*rate/12)
p_1month #probability developing cancer in 1-month period
```

## Today

-   Discrete-time cohort state-transition models

-   **Markov model solution**

-   Time-varying transitions

## Matrix calculations in R

```{r}
#| echo: true
A = matrix(data= 1:4, nrow=2)
B = matrix(data= 5:8, nrow=2)
A;B
#element-wise multiplication
A * B
#matrix multiplication
A %*% B
```

## Markov model components

Transition matrix

$$
\begin{array}{c}\begin{matrix}Healthy & moderate & severe & dead \end{matrix} 
\\\left[\ 
\begin{matrix}
p_{H \rightarrow H} & p_{H \rightarrow M} & p_{H \rightarrow S} & p_{H \rightarrow D}\\
p_{M \rightarrow H} & p_{M \rightarrow M} & p_{M \rightarrow S} & p_{M \rightarrow D}\\
p_{S \rightarrow H} & p_{S \rightarrow M} & p_{S \rightarrow S} & p_{S \rightarrow D}\\
p_{D \rightarrow H} & p_{D \rightarrow M} & p_{D \rightarrow S} & p_{D \rightarrow D}
\end{matrix}\ \right]
\end{array}
$$

initial distribution: $m_0 = \begin{bmatrix} 2000 & 0 & 0 & 0 \end{bmatrix}$

20 cycles, cycle length 1 year

## Parameterizing the matrix

Copy/paste and fill in the transition matrix. Use variable names rather than typing the numbers directly.

```{r}
#| echo: true
v_state_names <- c("H","M","S","D") #vector of state names

m_0 = matrix(c(2000, 0, 0, 0), nrow = 1, #initial dist
             dimnames = list(c(""), v_state_names)) 

p_HtoM = 0.2 #otherwise stays in healthy
p_MtoH = 0.4; p_MtoS = 0.4; p_MtoD = 0.01 #otherwise stay in moderate
p_StoH = 0.1; p_StoD = 0.3 #otherwise stay in severe

n_cycles = 20

mat_P = matrix(c(NA, NA, NA, NA,
                 NA, NA, NA, NA,
                 NA, NA, NA, NA,
                 NA, NA, NA, NA),
               nrow = 4, byrow = T,
               dimnames = list(v_state_names,
                               v_state_names))
```

## Parameterizing the transition matrix

```{r}
#| echo: true
mat_P = matrix(c(1-p_HtoM, p_HtoM,                 0,                0,
                 p_MtoH,   1-p_MtoH-p_MtoS-p_MtoD, p_MtoS,          p_MtoD,
                 p_StoH,   0,                      1-p_StoH-p_StoD, p_StoD,
                 0,        0,                      0,                1), 
              nrow = 4, byrow = T,
              dimnames = list(v_state_names,
                              v_state_names))
mat_P
#Check: do all rows sum to 1?
rowSums(mat_P)
```

## Running the model

Definition: $m_t$ is a $1 \times n_s$ matrix with the distribution of the cohort after cycle $t$. $T$ is our transition probability matrix (dimensions $n_s \times n_s$).

$$
m_t = m_{t-1} T
$$

$$
\begin{bmatrix}
m^{t-1}_A & m^{t-1}_B\\
\end{bmatrix}
\begin{bmatrix}
p_{A \rightarrow A} & p_{A \rightarrow B}\\
p_{B \rightarrow A} & p_{B \rightarrow B}\\
\end{bmatrix}\\
=\\
\begin{bmatrix}
m^{t-1}_A(p_{A \rightarrow A})+ m^{t-1}_B(p_{B \rightarrow A})& 
m^{t-1}_A(p_{A \rightarrow B})+ m^{t-1}_B(p_{B \rightarrow B})\\
\end{bmatrix}
$$

## Run our model

```{r}
#| echo: true
m_0
m_1 = m_0 %*% mat_P
m_1
m_2 = m_1 %*% mat_P
m_2
m_3 = m_2 %*% mat_P
m_3
```

## Matrix solution

Note the following

$$
\begin{aligned}
& m_1 = m_{0} P\\
& m_{2} = m_{1}P = (m_0P)P = m_0P^2\\
& m_{3} = m_{2} P = (m_0 P^2)P = m_0 P^3\\
\end{aligned}
$$

Therefore:

$$
m_t = m_0 P^t
$$

## Matrix solution code

```{r}
#| echo: true
#m_20 = m_0 %*% (mat_P %^% 20)
cycles_to_print = c(2, 10, 20)
for (i in cycles_to_print){
  print(paste0("t=",i))
  print(m_0 %*% (mat_P %^% i))
}
```

## Storing the state transitions

Matrix $M$ with $n_s$ columns corresponding to our states and $T+1$ rows corresponding to our state distribution after the $0th,1st,…,Tth$ cycles

```{r}
#| echo: true
M = matrix(rep(0, 4*21), ncol=4,
           dimnames = list(0:20, c("H","M","S","D")))
for (i in 1:21){
  M[i,] <- m_0 %*% (mat_P %^% (i-1))
}
M
```

## Markov trace diagram

Line plot of number of people (y-axis) in each health state (x-axis)

Convert $M$ into long-format data table for plotting

```{r}
#| echo: true
t_trace <- as_tibble(M) #convert from matrix
t_trace$Cycle_num <- 0:20 #add col for cycle number
t_trace <- t_trace |> #Long to wide
  gather(key=State, value=Count, H:D) #wide to long format
t_trace
```

## Markov trace diagram

```{r}
#| echo: true
ggplot(data=t_trace, aes(x=Cycle_num, y=Count, color=State))+
  geom_line()+geom_point()
```

## Today

-   Discrete-time cohort state-transition models

-   Markov model solution

-   **Time-varying transitions**

## Limit of true Markov model

Matrix solution only works for a pure Markov model

In practice, most multi-year models have transition probabilities that can depend on

-   **simulation time:** how long the model has been running

-   **state residence time:** how long someone has been in a state

## Classic use case for simulation time dependent probs

-   Over several years, cohort will die from "other causes" (not the disease modeled)

-   Usually approximated with country-specific life tables

-   [Canadian life tables available from StatsCan](https://www150.statcan.gc.ca/n1/pub/84-537-x/84-537-x2021001-eng.htm)

-   Use "Death probability between age X and X+1"

## 2020 life table data

```{r}
#| echo: true
t_other_cause_death <- read.csv2("prob_death_by_age_2020_StatsCan.csv",
                                 sep=",")
t_other_cause_death$prob_death<-as.numeric(t_other_cause_death$prob_death)
ggplot(data=t_other_cause_death, aes(x=Age, y=prob_death))+
  geom_point()+geom_line()
```

## 3-D transition array for time dependence

Transition matrix can be different for each cycle.

Use a 3D array to store:

-   Dim 1: "From" health state

-   Dim 2: "To" health state

-   Dim 3: Correspond to cycle $1,\ldots,t,\ldots,T$

$T[i,j,t]$ is probability of transitioning from state $i$ to state $j$ in cycle $t$

## One approach to age-specific other cause death

Multiply all transitions by $(1 - P_{OCM})$ (age-specific probability of other cause mortality), then add $P_{OCM}$ to the probability of transitioning to death.

For $P_{i \rightarrow j}$ for all $i,j \neq Death$:

$$
P_{i \rightarrow j}^{adjusted} = P_{i \rightarrow j}^{orig}. (1 - P_{OCM})
$$

For $P_{i \rightarrow D}$ for all $i \neq Death$:

$$
P_{i \rightarrow D}^{adjusted} = P_{i \rightarrow D}^{orig}. (1 - P_{OCM})+P_{OCM}
$$

## Example: 'from moderate' row of transition matrix

Without other cause mortality:

$$
\begin{array}{c}\begin{matrix}H & M & S & D \end{matrix} 
\\\left[\ 
\begin{matrix}
0.40 & 0.19 & 0.40 & 0.01\\
\end{matrix}\ \right]
\end{array}
$$

With $P_{OCM}=0.03$:

$$
\begin{array}{c}\begin{matrix} H & M & S & D \end{matrix} 
\\\left[\ 
\begin{matrix}
0.40(0.97) & 0.19(0.97) & 0.40(0.97) & 0.01(0.97)+0.03\\
\end{matrix}\ \right]
\end{array}
$$

$$
\begin{bmatrix}
0.388 & 0.1843 & 0.388 & 0.0397\\
\end{bmatrix}
$$

## Age-specific death: transition matrix

Cycle length is 1 year, cohort is age 50 at time 0.

```{r}
#| echo: true
# Pre-allocate 3D transition array
arr_P <- array(0,
              dim=c(4, 4, 21),
              dimnames=list(v_state_names, v_state_names, 0:20))
#enter transition matrix
for(year in 0:20){
  age = 50+year
  p_OCM <- t_other_cause_death[t_other_cause_death$Age==age,"prob_death"]
  mat_P_this_year = mat_P*(1-p_OCM)
  mat_P_this_year[,"D"]<-mat_P_this_year[,"D"]+p_OCM
  arr_P[ , , year+1] <- mat_P_this_year
}

```

## Age-specific death: transition matrix

```{r}
#| echo: true
#| eval: false

#can inspect our transition array
arr_P
#Verify that for each cycle, rows of transition matrix sum to 1
for (cycle in 0:20){
  print(rowSums(arr_P[ , , cycle+1]))
}
```

## Age-specific death: M matrix

```{r}
#| echo: true

M_OCM = matrix(rep(0, 4*21), ncol=4,
           dimnames = list(0:20, c("H","M","S","D")))
M_OCM[1,] <- m_0 #save initial distribution of cohort
for (i in 1:20){ #calculate distribution after each cycle
  M_OCM[i+1,] <- m_0 %*% (arr_P[ , , i] %^% i)
}
M_OCM
```

## Markov trace with and without age-specific other cause mortality

```{r}
#| echo: false
t_trace$scenario <- "No other cause mortality"

t_trace_OCM <- as_tibble(M_OCM) #convert from matrix
t_trace_OCM$Cycle_num <- 0:20 #add col for cycle number
t_trace_OCM <- t_trace_OCM |>
  gather(M, key=State, value=Count, H:D) #wide to long format
t_trace_OCM$scenario <- "With age-specific other cause mortality"
t_trace_compare <- rbind(t_trace, t_trace_OCM)
ggplot(data=t_trace_compare, aes(x=Cycle_num, y=Count, color=State))+
  geom_line()+geom_point()+
  facet_grid(cols = vars(scenario))
```

## Recap

-   Cohort models simulate moving between health states over time

-   Markov models have constant transitions allowing matrix solution

-   Time-varying transitions solved using 3D transition array

## Logistics

-   Assignment 1 (cost-effectiveness, decision trees) due Wednesday 1/18
-   Assignment 2 will be posted by Monday
