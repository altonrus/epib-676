---
title: "Reproducible modeling workflow"
subtitle: "EPIB  676 session 6, McGill University"
author: "Alton Russell"
date: "17 Sep 2024"
format: revealjs
editor: visual
---


## Today

-   **Open and reproducible principles**

-   My R Project workflow

## Reproducible

Analysis can be exactly redone, given same materials

-   Code

-   Environment

-   Data

## Reproducible for whom?

-   Can **you** run your entire workflow again?

-   Can **another person** run your entire workflow again?

-   Can **"future-you"** run your entire workflow again?

-   Can **"future-another-person"** run your entire workflow again?[^1]

[^1]: Adapted from [Telling Stories with Data by Rohan Alexander](https://tellingstorieswithdata.com/04-workflow.html)

## Reproducible outputs

::: columns
::: {.column width="50%"}
Necessary conditions

-   Code

-   Datasets

-   Info to reconstruct environment
:::

::: {.column width="50%"}
"Overachieving"

-   Code-generated manuscripts

-   Functional docker-container

-   Apps/widgets to run model/interrogate analysis
:::
:::

## Paradigm shift

Manuscript is an advertisement. The product is the associated work

-  Code

-  Data

-  Shiny app, etc.


> An article about a computational result is advertising, not scholarship. The **actual scholarship is the full software environment, code and data, that produced the result.**

[Buckheit and Donoho (1995)](https://statweb.stanford.edu/~wavelab/Wavelab_850/wavelab.pdf)

## Why people don't share code?

## Why people don't share code?

-   No one asked

-   It's not 'camera ready'

-   Want to keep competitive edge

-   Mistakes might be found

**Usually, not the best reasons**

## Why should we share code?

## Why should we share code?

-   Only way to fully communicate methods

-   Public or non-profit funded research is a public good

-   Extend your potential contribution

-   Mistakes might be found

-   Can increase citations

**Messy code \>\>\> No code!**

## "Data available on request"

Gabelica et. al.[^2] found:

[^2]: Gabelica, Bojčić, and Puljakc 2022. *Journal of Clinical Epidemiology* 2022. <https://doi.org/10.1016/j.jclinepi.2022.05.019>

-   3416 of 3556 articles (96%) included data availability statements

-   1782 (42%) indicated data available on request, **but**

    -   1528 (86%) did not respond

    -   131 (7%) declined to share

    -   123 (7%) shared their data

## "Research should be as open as possible and as closed as necessary"

*H2020 Program Guidelines on FAIR Data, European Commission*

<br>

Data sharing isn't always possible

## Can't share data due to privacy?

Code is useful, even without data

-   Precisely communicates methods

-   Others can adapt, borrow + run on their own data

Increase reproducibility without sharing data with

-   'Data dictionary' in supplement

-   Synthetic data(?)

## Environment

-   R and R packages get updated

-   No guarantee of backwards compatibility

-   Potential solutions

    -   [renv package](https://rstudio.github.io/renv/) for **r**eproducible **env**ironments

    -   [Docker containers](https://colinfay.me/docker-r-reproducibility/) (self-contained environment)


## R projects

-   Self contained set of files (data, scripts, reports)

-   Portable **if** all file paths relative to project directory

    -   No:`"\Users\alton\projects\COVID\data\dat.csv"`

    -   No: `setwd("\Users\alton\projects\COVID")`

    -   Yes: `"1_data\dat_file.csv"`

## Each script should run error-free in new session

-  Use console when developing code, but 'restart r and clear output' before final run

-  Set global options to maximize reproducibility

![](figs/rstudio-global-options.jpeg)
## Renv

`renv::init()` (first time) adds to your Rproject: 

-  A project library of all packages

-  A lockfile, `renv.lock` with metadata needed to reinstall packages

-  If you add/update packages, use `renv::snapshot()` to update your lockfile

- Changes to .Rprofile means packages should default to lockfile version when project loaded

## {Renv} lockfile example

**Note:** R version is saved, but `Renv` won't load it for you!

```
{
  "R": {
    "Version": "4.3.1",
    "Repositories": [
      {
        "Name": "CRAN",
        "URL": "https://cloud.r-project.org"
      }
    ]
  },
  "Packages": {
    "markdown": {
      "Package": "markdown",
      "Version": "1.0",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "4584a57f565dd7987d59dda3a02cfb41"
    },
    "mime": {
      "Package": "mime",
      "Version": "0.12.1",
      "Source": "GitHub",
      "RemoteType": "github",
      "RemoteHost": "api.github.com",
      "RemoteUsername": "yihui",
      "RemoteRepo": "mime",
      "RemoteRef": "main",
      "RemoteSha": "1763e0dcb72fb58d97bab97bb834fc71f1e012bc",
      "Requirements": [
        "tools"
      ],
      "Hash": "c2772b6269924dad6784aaa1d99dbb86"
    }
  }
}
```

## Docker-container

-  Creates image of your environment, including operating system, R version, packages, etc.

    -  Why? Same code/R version/package version could give different result on different OS!

- Based on Linux distribution (usually Ubuntu)

-  On new machine (with Linux), you can create the container based on the image

## Literate programming

Idea of Donald Knuth: Code snippets and 'natural language' (e.g., English) interspersed in one document

-   **Jupyter notebooks** Python, Julia, others

-   **RMarkdown** R

-   **Quarto documents** R, Python, Julia, JavaScript

    -   In 2022, RStudio the company re-branded to Posit and released Quarto

## Repositories

Put all shareable materials in one publicly-accessible, citeable spot (and cite it in your manuscript!)

Permanent third-party repo \> github repo

-   [Zenodo.org](https://zenodo.org/): general purpose, can link to a github release, DOI for each version by default

-   [OSF.io](OSF.io): open science framework, can DOI repo but not version

-   [Global Health CEA open-source model clearinghouse](http://ghcearegistry.org/orchard/open-source-model-clearinghouse) (25 models; 4 in R)

-   [SMDM COVID-19 modeling repository](https://smdm.org/news/detail/smdm-covid-19-modeling-special-committee-creating-a-platform-for-collaborat)

## Today

-   Open and reproducible principles

-   **My R Project workflow**


Can clone or download my template here:

<https://github.com/altonrus/generic-project>

## R project organization

::: columns
::: {.column width="40%"}
![](figs/generic-project-directory.png){width="399"}
:::

::: {.column width="60%"}
-   **1_data** (self-explanatory)

-   **2_scripts** code not embedded in manuscript

-   **3_intermediate** intermediate outputs

-   **4_output** figures, tables that will be read into the manuscript

-   **5_manuscipt** .qmd and 'rendered' manuscript
:::
:::

## 1_data folder best practices

-   Also put data documentation (dictionary, meta-data) here

    -   Share meta-data even when you can't share data

-   Put parameter tables in Excel (Assign2 has example)

    -   Read into RScript to run model

    -   Read into Quarto to display in manuscript

-   Line-level data in csv, json or [feather or parquet](https://arrow.apache.org/docs/index.html)

## 3_intermediate and 4_output

-   Tables/objects generated by scripts go to intermediate or output folder (**not data**!)

-   Use intermediate folder for non-final objects (objects later read into another script)

    -   e.g., preprocessed data

-   For smaller projects, you could get rid of intermediate and just save everything to output


## 4_output/figs

-   Save figures via code, not RStudio 'export'

```{r}
#| eval: false
#| echo: true
ggsave("./4_output/plt_prob_ce_grid.svg",
       width=7,  height=8, unit="in")
```

-   Look at saved output, not Rstudio viewer, to tweak

-   Vector format (svg, pdf) usually preferred over raster

    -   Vector looks sharp no matter how zoomed in
    
    -   Small filesize for line plots plots (but not complex figures)

    -   PDF figures don't play nice with Word



## 2_scripts folder best practices

::: columns
::: {.column width="65%"}
-   Script runs error-free in new environment

-   Name: Numbers then verbs

-   00 is "helper functions": to de-clutter, put functions hear, call `source("00-helper-functions.R")` in scripts 
:::

::: {.column width="35%"}
![](rscript_examples.png)

:::
:::

::: {.callout-warning}

Each script should run error-free in new environment without running another script first. Need to load packages, source helper scripts, read in data

:::




## Functionalize code

Smaller functions that call each other are easier to understand & debug than one massive function

Often develops over time:

-   At first, write code directly in script (no function)

-   Then, break key parts into functions

-   As number of functions grow, move some to `00-hepler-functions` script and `source()` into analysis scripts


## Headings in .R scripts

-   `# Text -----` will create a section for your outline

    -   Again, verb-based sections good

-   Neat hack: `#| - Text ----` can create 'subsections'

![](figs/headings_outline_example.png)

## Github in RStudio

::: columns
::: {.column width="65%"}
![](figs/github-in-rstudio.png)
:::

::: {.column width="35%"}
-   Can pull, commit, and push within Rstudio

-   Use terminal for more complex things

-   Also works in Rstudio server!
:::
:::

## .gitignore

::: columns
::: {.column width="30%"}
![](figs/gitignore-example.png)
By design, you'll need to add these to my template before you can use.

:::

::: {.column width="70%"}
List all folders/files you don't want on github

-   "local" folder (data use agreements, conference presentations, meeting minutes, etc.)

-   "private" sub-folders for objects that cannot be made public

Usually make github repo private while developing project and change to public when publishing

:::
:::

## More on private folders

-   Use when data use agreement and/or ethics prevents sharing data

-   Never store private data on github, even in private repo

::: {.callout-warning}

Objects other than data tables can include data (e.g., saving an ML model or multiply-imputed dataset object may have embedded data!)

:::

-   **If sensitive data were ever in repo, hard to remove! (just nuke and re-create before making public)**

## Merge conflicts

Happen if two users (or same user on two different machines) edits same line of file, or one user edits a file that another deletes

<!-- -->

```         
If you have questions, please
<<<<<<< HEAD
open an issue
=======
ask your question in IRC.
>>>>>>> branch-a
```

Avoid by pulling, & committing+pushing often!

::: callout-note
This is why if you edit the assignments you may be unable to pull the class repo. Can copy anything you want to edit into another location so you can always pull.
:::

## Quarto documents

-   Replacing RMarkdown (can embed Python or Julia)

-   Some RMarkdown packages don't (yet) work properly in Quarto

-   Can "knit" (RMarkdown) or "Render" (Quarto) to:

    -   HTML (this document)

    -   PDF

    -   Word

    -   Powerpoint

## Literate programming (.Rmd or .Qmd)

### Code chunks

```{r}
#| echo: true
#| eval: false

library(ggplot2)
fread("1_data/data.csv")
```

### Inline code

![](figs/example-inline-code.png)

↓

> The mean cost per person was \$1,212

## Why use inline code?

It talks longer to write inline code than hard-code numbers.

**But:**

-   If you change parameter and rerun your scripts, all results will update

-   Reduces risk of transcription error (but introduces risk of coding error)

## My Manuscript template

-   .Qmd that knits to Microsoft Word

    -   Collaborators can track changes
    -   Some medical journals still prefer Word

-   Requires a .bib file for bibliography

    -   Can make with [Zotero](https://www.zotero.org/) or Mendeley

-   Use [flextable package](https://davidgohel.github.io/flextable/reference/index.html) to make pretty tables

## Manuscript template .Qmd

-  <https://github.com/altonrus/generic-project/blob/main/5_manuscript/manuscript.qmd>

-   YAML header to specify title, output format, bib file, citation style

-   `<br>` for line breaks; `{{< page*break >}}` (without *) for page breaks

-   Allows latex equations

-   Custom crossref for supplemental tables and figures


## Manuscript folder contents

::: columns
::: {.column width="40%"}
![](figs/manuscript-folder-contents.png)
:::

::: {.column width="60%"}
-   **Reference manuscript:** set format for headers, table of content, etc.

-   **.csl file** specifies citation format (default is AMA format with numbers in brackets)

-   **.bib file** contains references to cite by citation code, e.g., `[@russell2021a]`
:::
:::

## Screenshot of "knit" manuscript

::: columns
::: {.column width="70%"}
![](figs/manuscript-knit-to-word.png)
:::

::: {.column width="30%"}
-   Normal word document

-   Collaborators track changes and return

-   Must manually update .Qmd (annoying)
:::
:::

## Citations: Zotero → Bibtex → .Rmd

::: columns
::: {.column width="40%"}
![](figs/zotero-screenshots.png)
:::

::: {.column width="60%"}
-   Export Zotero collection to Bibtex in same folder as manuscript.qmd

-   To replace default CiteKey, add `Citation Key: <CiteKey>` to 'extra' field

-   In .qmd header, set `bibliography: [filename].bib`

-   Cite with `[@CiteKey]` or `[@CiteKey1; @CiteKey2]`
:::
:::

## Better BibTex add-on for Zotero

::: columns
::: {.column width="50%"}
[Better BibTex for Zotero](https://retorque.re/zotero-better-bibtex/) (also see [this blog](https://www.andrewheiss.com/blog/2023/01/08/bibdesk-to-zotero-pandoc/#example-workflow-with-quarto-r-markdown-pandoc))

-   Auto-assigns citation keys within Zenodo

-   If you export to "Better bibtex" format, with "Keep updated" checked, .bib file auto-adds anything added in Zotero
:::

::: {.column width="50%"}
![](figs/BetterBibTeX.png)
:::
:::

## Zenodo repository for code/data

<https://zenodo.org/>

-   Permanent

-   Assigned a DOI (cite the repo in the manuscript!)

-   Two options

   - Upload manually 
   - :ink Github account and auto-update Zenodo whenever making a 'release' on Github

## Example: Evaluating COVID-19 quarantine and testing policies for arriving travelers

-   Manuscript: <https://doi.org/10.1101/2020.11.02.20224568>

-   Zenodo repository: <https://doi.org/10.5281/zenodo.4107124>

-   Github repository: <https://github.com/altonrus/quarantineTesting>

-   Shiny app: <https://shiny.mchi.mcgill.ca/arussel/quarantineTesting/>


## Learn more

-   [Reproducible Analytical Pipelines Course](https://rap4mads.eu/), Bruno Rodrigues

-   [Reproducible research in R workshop](https://r-cubed.rostools.org/index.html), Johnston et. al.

-   ["Telling Stories with Data"](https://tellingstorieswithdata.com/) Ch. 3 by Rohan Alexander

-   [Good enough practices in scientific computing](https://journals.plos.org/ploscompbiol/article/file?id=10.1371/journal.pcbi.1005510&type=printable) Wilson et. al.

-   [Intro to Dockers for R Users](https://colinfay.me/docker-r-reproducibility/) by Colin Fay

-   [ISPOR open source models interest group](https://www.ispor.org/member-groups/special-interest-groups/open-source-models)

## Non-programing assignments

See [Info for non-programming assignments](https://htmlpreview.github.io/?https://github.com/altonrus/epib-676/blob/main/syllabus/info_assignments_nonprogramming.html) in syllabus folder of Github.

-   Project proposal due Nov. 1
-   Open-source modelling presentations Nov. 5

## Logistics

-   Assignment 2 CSTM due Wednesday 9/25
-   Next 3 classes on simulation
-   Office hours 1:30 - 2:30pm, room #1103